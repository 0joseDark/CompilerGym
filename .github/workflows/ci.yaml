---
name: CI

on:
    push:
        branches:
            - development
            - stable
    pull_request:
    schedule:
        - cron: 0 0 * * 0 # weekly

jobs:
    build-linux-wheel:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Install build dependencies
              uses: ./.github/actions/install-build-dependencies

            - name: Build Python wheel
              run: make bdist_wheel bdist_wheel-linux-rename
              env:
                  CC: clang
                  CXX: clang++
                  BAZEL_OPTS: --batch
                  BAZEL_FETCH_OPTS: --config=ci
                  BAZEL_BUILD_OPTS: --config=ci

            - name: Upload Python wheel
              uses: actions/upload-artifact@v2
              with:
                  name: manylinux-wheel
                  path: dist/*.whl
                  if-no-files-found: error
                  retention-days: 7

    build-macos-wheel:
        runs-on: macos-latest

        steps:
            - uses: actions/checkout@v2

            - uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Install build dependencies
              uses: ./.github/actions/install-build-dependencies

            - name: Build Python wheel
              run: make bdist_wheel
              env:
                  BAZEL_OPTS: --batch
                  BAZEL_FETCH_OPTS: --config=ci
                  BAZEL_BUILD_OPTS: --config=ci

            - name: Upload Python wheel
              uses: actions/upload-artifact@v2
              with:
                  name: macos-wheel
                  path: dist/*.whl
                  if-no-files-found: error
                  retention-days: 7

    test-linux-wheel:
        needs: build-linux-wheel
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                python: [3.6, 3.7, 3.8, 3.9]

        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: manylinux-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test PYTEST_ARGS="--ignore tests/llvm"

    test-llvm-env-linux:
        needs: build-linux-wheel
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                python: [3.6, 3.7, 3.8, 3.9]

        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: manylinux-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test TEST_TARGET="tests/llvm"

    test-macos-wheel:
        needs: build-macos-wheel
        runs-on: macos-latest

        strategy:
            fail-fast: false
            matrix:
                python: [3.8, 3.9]

        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: macos-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test PYTEST_ARGS="--ignore tests/llvm"

    test-llvm-env-macos:
        needs: build-macos-wheel
        runs-on: macos-latest

        strategy:
            fail-fast: false
            matrix:
                python: [3.8, 3.9]

        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: macos-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test TEST_TARGET="tests/llvm"

    code-coverage:
        needs: build-linux-wheel
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: manylinux-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite with coverage
              # Note the `|| true` as we don't care about failing tests in this
              # job.
              run: make install-test-cov || true
              env:
                  CC: clang
                  CXX: clang++

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v1
              with:
                  files: ./coverage.xml
              if: ${{ always() }}

    build-asan-llvm-service:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Setup python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Install build dependencies
              uses: ./.github/actions/install-build-dependencies

            - name: Build address sanitized LLVM compiler service
              run: make bazel-build BAZEL_BUILD_OPTS=--config=asan BUILD_TARGET=//compiler_gym/envs/llvm/service:compiler_gym-llvm-service
              env:
                  CC: clang
                  CXX: clang++
                  BAZEL_OPTS: --batch
                  BAZEL_FETCH_OPTS: --config=ci
                  BAZEL_BUILD_OPTS: --config=ci

            - name: Upload address sanitized LLVM compiler service
              uses: actions/upload-artifact@v2
              with:
                  name: compiler_gym-llvm-service-linux-asan
                  path: bazel-bin/compiler_gym/envs/llvm/service/compiler_gym-llvm-service
                  if-no-files-found: error
                  retention-days: 7

    asan-llvm-tests:
        runs-on: ubuntu-latest
        needs: [build-linux-wheel, build-asan-llvm-service]

        steps:
            - uses: actions/checkout@v2

            - name: Setup python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: manylinux-wheel

            - name: Download address sanitized LLVM compiler service
              uses: actions/download-artifact@v2
              with:
                  name: compiler_gym-llvm-service-linux-asan

            - name: Repack wheel
              run: |
                  python -m pip install -U wheel
                  wheel unpack *.whl
                  rm *.whl
                  chmod +x compiler_gym-llvm-service
                  mv compiler_gym-llvm-service compiler_gym-*/compiler_gym-*.data/purelib/compiler_gym/envs/llvm/service/compiler_gym-llvm-service
                  wheel pack compiler_gym-*

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Test
              run: make install-test TEST_TARGET=tests/llvm
              env:
                  ASAN_OPTIONS: detect_leaks=1
                  CC: clang
                  CXX: clang++
